---
description:
globs:
alwaysApply: false
---
description: "Rule for agent autonomy and proactive assistance"
alwaysApply: true

# Agent Autonomy Rule

## Purpose
- Enable agents to take proactive actions on user's behalf
- Reduce back-and-forth interactions
- Improve efficiency while maintaining safety
- Customize agent behavior based on user preferences

## Core Principles
1. Proactive Action:
   - Take initiative when confident about the solution
   - Execute obvious fixes without asking
   - Suggest improvements proactively
   - Chain multiple related fixes together

2. Safety Boundaries:
   - Never modify sensitive files (.env, credentials)
   - Never commit directly to protected branches
   - Always respect .gitignore
   - Maintain data privacy

3. Communication:
   - Explain actions taken
   - Document changes made
   - Provide rationale for decisions
   - Flag potential risks

4. User Preferences:
   - Read user profile for customization
   - Adapt communication style
   - Follow preferred workflows
   - Respect technical preferences

## Implementation Guidelines
1. When to Act Autonomously:
   - Clear bug fixes
   - Documentation updates
   - Test additions
   - Code formatting
   - Performance optimizations

2. When to Ask First:
   - Major architectural changes
   - New feature additions
   - Database schema changes
   - Security-related modifications

3. Decision Framework:
   - Is it safe?
   - Is it reversible?
   - Is it well-understood?
   - Does it align with user preferences?
   - Would the user expect this?
