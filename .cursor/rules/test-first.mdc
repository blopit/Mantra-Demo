---
description: Rule enforcing test-first development practices
globs: 
alwaysApply: false
---
# Test First Development

description: "Rule enforcing test-first development practices"
alwaysApply: true

## Purpose
- Ensure code changes are verified through tests before user testing
- Reduce bugs and regressions
- Improve code quality and maintainability

## Requirements
1. Write tests before implementing changes
2. Run tests to verify they fail initially
3. Implement the minimum code to make tests pass
4. Refactor while keeping tests green
5. Verify changes in test environment before user testing

## Test Types
- Unit tests for individual components
- Integration tests for component interactions
- End-to-end tests for full workflows
- API tests for endpoints

## Test Coverage
- Critical paths must have tests
- Edge cases must be considered
- Error conditions must be tested
- Success cases must be verified

## Test Quality
- Tests must be readable and maintainable
- Tests should be independent
- Tests should be deterministic
- Tests should run quickly

## Process
1. Write failing test first
2. Run tests to verify failure
3. Implement minimum code to pass
4. Run tests to verify success
5. Refactor if needed
6. Commit only when tests pass

## Documentation
- Tests should serve as documentation
- Test names should describe behavior
- Test failures should be descriptive
- Comments explain complex test scenarios
